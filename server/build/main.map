{"version":3,"sources":["webpack:///webpack/bootstrap 5791096884101d8619d7","webpack:///./src/index.js","webpack:///external \"express\"","webpack:///external \"fs\"","webpack:///external \"http\"","webpack:///external \"parse-server\""],"names":["ParseServer","require","express","fs","data","readFileSync","config","JSON","parse","err","console","log","databaseUri","MONGO_DB_URL","api","databaseURI","cloud","CLOUD_URL","appId","masterKey","serverURL","PARSE_SERVER_URL","liveQuery","classNames","app","use","httpServer","createServer","listen","HTTP_SERVER_PORT_NO","createLiveQueryServer"],"mappings":";;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA,IAAIA,cAAc,mBAAAC,CAAQ,CAAR,EAAwBD,WAA1C;AACA,IAAIE,UAAU,mBAAAD,CAAQ,CAAR,CAAd;AACA,IAAIE,KAAK,mBAAAF,CAAQ,CAAR,CAAT;;AAEA,IAAIG,OAAOD,GAAGE,YAAH,CAAgB,sBAAhB,CAAX;AACA,IAAIC,MAAJ;;AAEA,IAAI;AACHA,UAASC,KAAKC,KAAL,CAAWJ,IAAX,CAAT;AACA,CAFD,CAEE,OAAOK,GAAP,EAAY;AACbC,SAAQC,GAAR,CAAY,0BAAZ;AACA,OAAMF,GAAN;AACA;;AAED,IAAIG,cAAcN,OAAOO,YAAzB;AACA,IAAIC,MAAM,IAAId,WAAJ,CAAgB;AACzBe,cAAaH,WADY;AAEzBI,QAAOV,OAAOW,SAFW;AAGzBC,QAAO,KAHkB;AAIzBC,YAAW,QAJc;AAKzBC,YAAWd,OAAOe,gBALO;AAMzBC,YAAW;AACVC,cAAY,CAAC,OAAD,EAAU,UAAV;AADF;AANc,CAAhB,CAAV;;AAWA;AACA,IAAIC,MAAMtB,SAAV;AACAsB,IAAIC,GAAJ,CAAQ,QAAR,EAAkBX,GAAlB;;AAEA;AACA,IAAIY,aAAa,mBAAAzB,CAAQ,CAAR,EAAgB0B,YAAhB,CAA6BH,GAA7B,CAAjB;AACAE,WAAWE,MAAX,CAAkBtB,OAAOuB,mBAAzB,EAA8C,YAAW;AACxDnB,SAAQC,GAAR,CAAY,kCAAkCL,OAAOuB,mBAArD;AACA,CAFD;;AAIA;AACA7B,YAAY8B,qBAAZ,CAAkCJ,UAAlC,E;;;;;;ACrCA,oC;;;;;;ACAA,+B;;;;;;ACAA,iC;;;;;;ACAA,yC","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5791096884101d8619d7","var ParseServer = require('parse-server').ParseServer;\nvar express = require('express');\nvar fs = require('fs');\n\nvar data = fs.readFileSync('./config/config.json');\nvar config;\n\ntry {\n\tconfig = JSON.parse(data);\n} catch (err) {\n\tconsole.log('config.json is corrputed')\n\tthrow(err);\n}\n\nvar databaseUri = config.MONGO_DB_URL;\nvar api = new ParseServer({\n\tdatabaseURI: databaseUri,\n\tcloud: config.CLOUD_URL,\n\tappId: 'app',\n\tmasterKey: 'master',\n\tserverURL: config.PARSE_SERVER_URL,\n\tliveQuery: {\n\t\tclassNames: [\"posts\", \"comments\"]\n\t}\n});\n\n// instantiate express route for parse\nvar app = express();\napp.use('/parse', api);\n\n// start http server\nvar httpServer = require('http').createServer(app);\nhttpServer.listen(config.HTTP_SERVER_PORT_NO, function() {\n\tconsole.log('parse server running on port ' + config.HTTP_SERVER_PORT_NO);\n});\n\n// start parse liveQuery server\nParseServer.createLiveQueryServer(httpServer);\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"fs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"fs\"\n// module id = 2\n// module chunks = 0","module.exports = require(\"http\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"http\"\n// module id = 3\n// module chunks = 0","module.exports = require(\"parse-server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"parse-server\"\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}